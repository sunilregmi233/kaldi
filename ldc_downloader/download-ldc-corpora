#!/bin/bash

################################################################################
#                                                                              #
# Script to download corpora from the Linguistic Data Consortium               #
#                                                                              #
# Original author: Lane Schwartz                                               #
# Additional contributors: None                                                #
#                                                                              #
#                                                                              #
# Change log:                                                                  #
#                                                                              #
#  * 2016-03-05 Lane Schwartz                                                  #
#    Verify that downloaded files are tgz, not HTML.                           #
#    If HTML, exit the script, because file was not correctly downloaded       #
#                                                                              #
#  * 2016-03-05 Lane Schwartz                                                  #
#    Download a richer set of information into the corpora.tsv file            #
#    and record that information in the names of the downloaded files          #
#                                                                              #
#  * Created on 2016-03-04 by Lane Schwartz                                    #
#    Based on Python code by Jonathan May:   https://github.com/jonmay/ldcdl   #
#                                                                              #
#                                                                              #
# This program is free software: you can redistribute it and/or modify         #
#  it under the terms of the GNU General Public License as published by        #
#  the Free Software Foundation, either version 3 of the License, or           #
#  (at your option) any later version.                                         #
#                                                                              #
# This program is distributed in the hope that it will be useful,              #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of              #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
#  GNU Lesser General Public License for more details.                         #
#                                                                              #
# You should have received a copy of the GNU General Public License            #
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.       #
#                                                                              #
################################################################################





################################################################################
#                                                                              #
#                        Bash functions and variables                          #
#                                                                              #
################################################################################

# Define a bash function for logging messages with a timestamp
log() {
    TIMESTAMP=$(date +"%Y-%M-%d %H:%M:%S UTC%:::z")
    printf "%-27s %-65s %-3s" "${TIMESTAMP}" "$1" "..."  1>&2 ;
}

# Define required URL variables
BASE_URL="https://catalog.ldc.upenn.edu"
LOGIN_URL="https://catalog.ldc.upenn.edu/login"
DOWNLOADS_URL="https://catalog.ldc.upenn.edu/organization/downloads"

# Define other variables
COOKIES_FILE="cookies.txt"
COOKIE_FLAGS="-b ${COOKIES_FILE} -c ${COOKIES_FILE}"
DOWNLOAD_FILE="corpora.tsv"



################################################################################
#                                                                              #
#                    Prompt user for LDC login credentials                     #
#                                                                              #
################################################################################

if [[ ! -f "${COOKIES_FILE}" ]]; then

    log "Enter LDC login credentials"
    echo
    echo

    # Prompt user for login information
    read -p "Enter email address: " EMAIL
    read -s -p "Enter Password: "   PASSWORD
    echo
    echo

fi


################################################################################
#                                                                              #
#                         Get LDC authenticity token                           #
#                                                                              #
################################################################################

log "Accessing LDC login page"
echo

# Extract authenticity token from LDC login page
TOKEN=$(curl ${COOKIE_FLAGS} "${LOGIN_URL}" 2> /dev/null | sed 's,>,>\n,g' | grep '<input name="authenticity_token"' | tr ' ' '\n' | grep "^value=" | sed 's,^value=",,; s,"$,,')




################################################################################
#                                                                              #
#                            Log in to LDC account                             #
#                                                                              #
################################################################################

log "Logging in to your LDC account"

curl ${COOKIE_FLAGS}                                    \
    --data-urlencode "utf8=âœ“"                           \
    --data-urlencode "authenticity_token=${TOKEN}"      \
    --data-urlencode "spree_user[login]=${EMAIL}"       \
    --data-urlencode "spree_user[password]=${PASSWORD}" \
    --data-urlencode "spree_user[remember_me]=1"        \
    --data-urlencode "commit=Login"                     \
    "${LOGIN_URL}" &> /dev/null

echo




################################################################################
#                                                                              #
#                         Access list of LDC corpora                           #
#                                                                              #
################################################################################

log "Accessing list of your LDC corpora"


curl ${COOKIE_FLAGS} "${DOWNLOADS_URL}"     2> /dev/null    | \
    grep -v "^\s*$"                                         | \
    sed 's,\s\s*, ,g'                                       | \
    sed 's,> <,><,g'                                        | \
    sed 's,^ ,,'                                            | \
    sed 's,><,>\n<,g'                                       | \
    tr -d '\n'                                              | \
    sed 's,.*<tbody>\(.*\)</tbody>.*,\1,'                   | \
    sed 's,<tr,\n<tr,g'                                     | \
    sed 's,<tr[^>]*>,,g'                                    | \
    sed 's,<td[^>]*>,,g'                                    | \
    sed 's,<span[^>]*>,,g'                                  | \
    sed "s,<a [^>]* href='\([^']*\)'[^>]*>,\1,g"            | \
    sed 's,</[^>]*>,\t,g'                                   | \
    sed 's,\t\t*,\t,g'                                        \
    > ${DOWNLOAD_FILE}                                        \
    2> /dev/null

# Add a trailing newline to the download file
echo >> ${DOWNLOAD_FILE}

echo



################################################################################
#                                                                              #
#                       Provide user with status update                        #
#                                                                              #
################################################################################

echo
echo "A list of the LDC corpora associated with your account has been saved to ${DOWNLOAD_FILE}"
echo

if [[ "$@" == "" ]]; then

    echo "To download any of these corpora, re-run this script, providing the LDC corpus IDs as command line arguments"
    echo

fi



################################################################################
#                                                                              #
#                            Download LDC corpora                              #
#                                                                              #
################################################################################

for LDC_CORPUS in $@ ; do

    echo

    TSV_LINE=$(grep "${LDC_CORPUS}" "${DOWNLOAD_FILE}")
    CORPUS_URL=$(cut  -f 5 <<< "${TSV_LINE}")
    CORPUS_NAME=$(cut -f 2 <<< "${TSV_LINE}" | tr ' ' '_')
    CORPUS_FILE=$(cut -f 6 <<< "${TSV_LINE}" | sed 's,<br/>.*,,; s,.tgz$,,')

    LDC_CORPUS_FILENAME="${LDC_CORPUS}__${CORPUS_NAME}__${CORPUS_FILE}.tgz"
    LDC_CORPUS_LOGNAME="${LDC_CORPUS}__${CORPUS_NAME}__${CORPUS_FILE}.log"
    
    if   [[ "${CORPUS_URL}" =~ ^/download ]]; then
    
        log "Downloading ${LDC_CORPUS} from ${BASE_URL}${CORPUS_URL} to \"${LDC_CORPUS_FILENAME}\""
        echo
        curl ${COOKIE_FLAGS} "${BASE_URL}${CORPUS_URL}" > "${LDC_CORPUS_FILENAME}" 2> "${LDC_CORPUS_LOGNAME}"
    
    elif [[ "${CORPUS_URL}" =~ ^http ]]; then
    
        log "Downloading ${LDC_CORPUS} from ${CORPUS_URL}"
        echo
        curl ${COOKIE_FLAGS} "${CORPUS_URL}" > "${LDC_CORPUS_FILENAME}" 2> "${LDC_CORPUS_LOGNAME}"
    
    else
    
        log "Not downloading ${LDC_CORPUS}: ${CORPUS_URL}"
        echo
    
    fi 


    FILE_TYPE=$(file -i -b "${LDC_CORPUS_FILENAME}" | cut -d ';' -f 1)

    if [[ "${FILE_TYPE}" == "text/html" ]]; then

	log "Encountered an error downloading ${LDC_CORPUS}. The downloaded file is HTML, but was expected to be .tgz"
	exit 1

    fi

done

echo

